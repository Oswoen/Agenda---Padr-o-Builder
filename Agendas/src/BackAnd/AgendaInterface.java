
package BackAnd;

import java.beans.PropertyVetoException;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
Algumas classes possuiam diversos atributos e estes eram atribuidos à elas pelo
 seu construtor visando futuras implementações praticas, e uma maior legibilidade 
 de codigo o padrão builder foi escolhido. O padrao Builder me permite fragmentar 
 a construção de objetos complexos e alem disso caso seja nescessário ou simplesmente por um querer
 podemos criar derivações de elementos as derivações de elementos não são aplicadas 
 pois a interface delimita as utilizações que os usuarios poderiam utilizar, o metodo de aplicação 
 foi refatorar um contrutor com 3, 4 ou 5 componentes que eram passados por parametros para 
 * um construtor privado, na classe foram criadas diversas funcoes publicas e outras estaticas 
 * para atribuir a nova construir uma nova instancia as funcoes publicas servem para fazer a
 *modelagem do objeto instanciado (set dos atributos 'this' ) algumas funcoes qe nao faziam parte do metodo 
 * construtor AgendaInterface não receberam a refatoração justamente por serem funcoes auxiliares 
 * caso estas fizem parte da construção do objeto em si teriam sido refatoradas 

 */
public class AgendaInterface extends javax.swing.JFrame {
    
private String NomeAluno, Senha;
    private boolean visibilidade=false;
    private int validade=0, validade1=0, linhasMostar=0;
    
  // Aluno aluno= new Aluno(this.NomeAluno, this.Senha);
    Aluno aluno= Aluno.AlunoBuilder()
                      .Nome(this.NomeAluno)
                      .Senha(this.Senha);
    private int dias;
   
       /**
     * Creates new form AgendaInterface
    public AgendaInterface(String nome, String senha) {
        this.NomeAluno=nome;
         this.Senha=senha;       
        initComponents();
    }
     */
    private AgendaInterface() {    
        initComponents();
    }

    public static AgendaInterface DisciplinaBuilder(){
        return new AgendaInterface();
    }
    public AgendaInterface Nome (String Nome) {
        this.NomeAluno=Nome;
        return this;
    }
    
public AgendaInterface Senha (String senha) {
         this.Senha=senha; 
        return this;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jSpinner1 = new javax.swing.JSpinner();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        disciplinas1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        datePicker2 = new com.michaelbaranov.microba.calendar.DatePicker();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        disciplinas = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox<>();
        datePicker1 = new com.michaelbaranov.microba.calendar.DatePicker();
        jEvento = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDisciplina = new javax.swing.JTable();
        CadastrarDisciplina = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTextDisciplina = new javax.swing.JTextField();
        jTextHorario = new javax.swing.JTextField();
        jTextProfessor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Complemento = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextInformacoes = new javax.swing.JTextField();
        jComboComplementar = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableComplementares = new javax.swing.JTable();
        jButton14 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel(this.NomeAluno);
        jLabel11 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Agenda do Aluno");
        setResizable(false);

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane2.setEnabled(false);

        jButton5.setText("Adicionar");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel4.setText("Disciplina");

        disciplinas1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione uma disciplina>" }));
        disciplinas1.setEnabled(false);
        disciplinas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disciplinas1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Data");

        jButton8.setText("Mostrar");
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione o periodo>", "Semana", "Mês", "Semestre" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        datePicker2.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton8))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(disciplinas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disciplinas1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jTabbedPane2.addTab("Tabalhos", jPanel5);

        jButton2.setText("Adicionar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Disciplina");

        jLabel3.setText("Data");

        disciplinas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione uma disciplina>" }));

        jButton7.setText("Mostrar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione o periodo>", "Semana", "Mês", "Semestre" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(disciplinas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(135, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addGap(72, 72, 72))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(disciplinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17))
        );

        jTabbedPane2.addTab("Provas", jPanel1);

        jEvento.setText("Adicionar evento");
        jEvento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEventoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Eventos:");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jTabbedPane2)
                        .addGap(16, 16, 16))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jEvento)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jEvento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTableDisciplina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Disciplina", "Horario", "Professor"
            }
        ));
        jTableDisciplina.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTableDisciplina);
        jTableDisciplina.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        CadastrarDisciplina.setText("Cadastrar");
        CadastrarDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarDisciplinaActionPerformed(evt);
            }
        });

        jButton1.setText("Excluir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextDisciplina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDisciplinaActionPerformed(evt);
            }
        });

        jLabel7.setText("Disciplina");

        jLabel9.setText("Horário");

        jLabel10.setText("Professor");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(CadastrarDisciplina)
                            .addGap(192, 192, 192))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel7)
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addComponent(jTextDisciplina))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(jTextHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel10)
                                .addComponent(jTextProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextDisciplina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(CadastrarDisciplina)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Fluxo Principal", jPanel2);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 255));
        jLabel6.setText("Atividades Complementares:");

        Complemento.setText("Tornar Editavel");
        Complemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComplementoActionPerformed(evt);
            }
        });

        jButton11.setText("Excluir");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel12.setText("Selecione o tipo:");

        jTextInformacoes.setEnabled(false);
        jTextInformacoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextInformacoesActionPerformed(evt);
            }
        });

        jComboComplementar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<Selecione uma atividade>" }));
        jComboComplementar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboComplementarActionPerformed(evt);
            }
        });

        jLabel13.setText("Informações Complementares:");

        jTableComplementares.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Atividade Complementar", "Informações"
            }
        ));
        jScrollPane3.setViewportView(jTableComplementares);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addGap(175, 175, 175))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton11))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Complemento))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jComboComplementar, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextInformacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextInformacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboComplementar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(Complemento)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jButton11)
                .addContainerGap(224, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Outras Atividades", jPanel3);

        jButton14.setText("Logout");
        jButton14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jLabel8.setText(this.NomeAluno);
        jLabel8.setAutoscrolls(true);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Agenda do Aluno:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton14))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton14)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 404, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        if (jTableComplementares.getSelectedRow()!=-1){
        DefaultTableModel complemento= (DefaultTableModel) jTableComplementares.getModel();
        complemento.removeRow(jTableComplementares.getSelectedRow());
        }else{
            JOptionPane.showMessageDialog(null,"Nenhuma linha foi selecionada");
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void CadastrarDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarDisciplinaActionPerformed
        // TODO add your handling code here:       
        DefaultTableModel disciplina= (DefaultTableModel) jTableDisciplina.getModel();
     Aluno alunoLocal= Aluno.AlunoBuilder()
                      .Nome(this.NomeAluno)
                      .Senha(this.Senha);  
//      String disciplinas=jTextDisciplina.getText();
//     String professor=jTextProfessor.getText();
//String horario=jTextHorario.getText();
//     aluno.setDisciplina(disciplinas,professor, horario);
     alunoLocal.setDisciplina(jTextDisciplina.getText(),jTextProfessor.getText(), jTextHorario.getText() );
     Object[] dados= {alunoLocal.getDisciplina(), alunoLocal.getHorario(), alunoLocal.getProfessor() };
     disciplina.addRow(dados);
     disciplinas1.addItem(alunoLocal.getDisciplina());
     disciplinas.addItem(alunoLocal.getDisciplina());
    }//GEN-LAST:event_CadastrarDisciplinaActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
 
        
       
  
  String nome= disciplinas1.getItemAt(disciplinas1.getSelectedIndex());//aqui é o nome pego ele do disciplinas 1
  

        
   String ok=datePicker2.getDate().getDate() +"/"+(datePicker2.getDate().getMonth()+1) +"/"+ (datePicker2.getDate().getYear()+1900); 
System.out.println(ok);
  
  
//  System.out.println(dias + " Trabalho " + nome +" " +  datePicker2.getDate().getDate() +" " +datePicker2.getDate().getMonth()+1 +" " + (datePicker2.getDate().getYear()-datePicker1.getDate().getYear())); 
//  System.out.println(datePicker2.getDate());
//  System.out.println(datePicker2.getDate().getYear()+1900);
  

  if (disciplinas1.getSelectedItem().equals("<Selecione uma disciplina>")){
          JOptionPane.showMessageDialog(null, "Disciplina selecionada é inválida");
          
      }else{
            if (datePicker2.commitEdit()){    
          //System.out.println(datePicker2.getDate().getDate());
          // verifica se é dps
          //System.out.println(datePicker2.getDate().compareTo(datePicker1.getDate())); retorna 0 se forem datas iguais
          //System.out.println(datePicker2.getDate().after(datePicker1.getDate()));  
          //Mostrar mostrart= new Mostrar("Trabalho", nome, ok);

  //mostrart.setVisible(true) ;
      if (datePicker2.getDate().after(datePicker1.getDate())){
              try {
                  System.out.println((datePicker2.getDate().getTime()-datePicker1.getDate().getTime())/86400000);// essa aqui retorna diferenca entre datas
                 this.dias=(int) ((datePicker2.getDate().getTime()-datePicker1.getDate().getTime())/86400000);
                  datePicker2.setDate(datePicker1.getDate());
                  disciplinas1.setSelectedIndex(0); 
                  aluno.setEvento(dias, "Trabalho", nome,ok);
                 this.linhasMostar=aluno.novoEvento.index() ;
                  JOptionPane.showMessageDialog(null, " Cadastrado com sucesso");
                  
              } catch (PropertyVetoException ex) {
                  Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
              }
      }else if(datePicker2.getDate().before(datePicker1.getDate())){
              try {
                  datePicker2.setDate(datePicker1.getDate());
              } catch (PropertyVetoException ex) {
                  Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
              }
                  disciplinas1.setSelectedIndex(0);
          JOptionPane.showMessageDialog(null, " Opção invalida!\n -Seu evento já passou");
      }else{
              try {
                  datePicker2.setDate(datePicker1.getDate());
              } catch (PropertyVetoException ex) {
                  Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
              }
              
                  disciplinas1.setSelectedIndex(0);
                  this.dias=(int) ((datePicker2.getDate().getTime()-datePicker1.getDate().getTime())/86400000);
           aluno.setEvento(dias, "Trabalho", nome,ok);  
           this.linhasMostar=aluno.novoEvento.index() ;
          JOptionPane.showMessageDialog(null, " Evento Cadastrado!\n -Seu evento é hoje");
      }
         }else{
                
    JOptionPane.showMessageDialog(null, "Erro, insira uma data");
}    
        }
    
    }//GEN-LAST:event_jButton5ActionPerformed

    private void datePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePicker1ActionPerformed
datePicker1.setPreferredSize(datePicker2.getSize() );       
    }//GEN-LAST:event_datePicker1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       String nome= disciplinas.getItemAt(disciplinas.getSelectedIndex());//aqui é o nome pego ele do disciplinas 1
  

        
   String ok=datePicker2.getDate().getDate() +"/"+(datePicker1.getDate().getMonth()+1) +"/"+ (datePicker1.getDate().getYear()+1900); 

  
  
//  System.out.println(dias + " Trabalho " + nome +" " +  datePicker2.getDate().getDate() +" " +datePicker2.getDate().getMonth()+1 +" " + (datePicker2.getDate().getYear()-datePicker1.getDate().getYear())); 
//  System.out.println(datePicker2.getDate());
//  System.out.println(datePicker2.getDate().getYear()+1900);
  

  if (disciplinas.getSelectedItem().equals("<Selecione uma disciplina>")){
          JOptionPane.showMessageDialog(null, "Disciplina selecionada é inválida");
          
      }else{
            if (datePicker1.commitEdit()){    
          //System.out.println(datePicker2.getDate().getDate());
          // verifica se é dps
          //System.out.println(datePicker2.getDate().compareTo(datePicker1.getDate())); retorna 0 se forem datas iguais
          //System.out.println(datePicker2.getDate().after(datePicker1.getDate()));  
          //Mostrar mostrart= new Mostrar("Trabalho", nome, ok);

  //mostrart.setVisible(true) ;
      if (datePicker1.getDate().after(datePicker2.getDate())){
              try {
                  // essa aqui retorna diferenca entre datas
                 this.dias=(int) ((datePicker1.getDate().getTime()-datePicker2.getDate().getTime())/86400000);
                  datePicker1.setDate(datePicker2.getDate());
                  disciplinas.setSelectedIndex(0); 
                  aluno.setEvento(dias, "Prova", nome,ok);
                 this.linhasMostar=aluno.novoEvento.index() ;
                  JOptionPane.showMessageDialog(null, " Cadastrado com sucesso");
                  
              } catch (PropertyVetoException ex) {
                  Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
              }
      }else if(datePicker1.getDate().before(datePicker2.getDate())){
              
          try {
              datePicker1.setDate(datePicker2.getDate());
          } catch (PropertyVetoException ex) {
              Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
          }
             
                  disciplinas.setSelectedIndex(0);
          JOptionPane.showMessageDialog(null, " Opção invalida!\n -Seu evento já passou");
      }else{
              try {
                  datePicker1.setDate(datePicker2.getDate());
              } catch (PropertyVetoException ex) {
                  Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
              }
              
                  disciplinas.setSelectedIndex(0);
                  this.dias=(int) ((datePicker1.getDate().getTime()-datePicker2.getDate().getTime())/86400000);
           aluno.setEvento(dias, "Prova", nome,ok);  
           this.linhasMostar=aluno.novoEvento.index() ;
          JOptionPane.showMessageDialog(null, " Evento Cadastrado!\n -Seu evento é hoje");
      }
         }else{
                
    JOptionPane.showMessageDialog(null, "Erro, insira uma data");
}    
        }
    
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
    // TODO add your handling code here:
    int sair = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair",null, JOptionPane.YES_NO_OPTION);
if (sair==JOptionPane.YES_OPTION){ 
    this.visibilidade=true;
    carrega();
        dispose();
        
}


//        
        
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTextDisciplinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDisciplinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextDisciplinaActionPerformed

    private void jTextInformacoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextInformacoesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextInformacoesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (jTableDisciplina.getSelectedRow()!=-1){
        DefaultTableModel disciplina= (DefaultTableModel) jTableDisciplina.getModel();
        disciplinas1.setSelectedIndex(0);
        disciplinas1.removeItemAt(jTableDisciplina.getSelectedRow()+1);
        disciplinas.setSelectedIndex(0);
        disciplinas.removeItemAt(jTableDisciplina.getSelectedRow()+1);
        disciplina.removeRow(jTableDisciplina.getSelectedRow());
        
       
        }else{
            JOptionPane.showMessageDialog(null,"Nenhuma linha foi selecionada");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void disciplinas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disciplinas1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_disciplinas1ActionPerformed

    private void jComboComplementarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboComplementarActionPerformed
          // TODO add your handling code here:
          
    }//GEN-LAST:event_jComboComplementarActionPerformed

    private void ComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComplementoActionPerformed
 Aluno outroAlunoLocal= Aluno.AlunoBuilder()
                      .Nome(this.NomeAluno)
                      .Senha(this.Senha);if (this.validade==0){        
          outroAlunoLocal.setComplemento();
          jComboComplementar.addItem(outroAlunoLocal.getPesquisa());
          jComboComplementar.addItem(outroAlunoLocal.getExtensao());
          jComboComplementar.addItem(outroAlunoLocal.getOrientacao());
        this.validade ++;
        jTextInformacoes.setEnabled(true);
        Complemento.setText("Inserir");
}else{

DefaultTableModel complementos = (DefaultTableModel) jTableComplementares.getModel();
        if (jComboComplementar.getSelectedItem().equals("<Selecione uma atividade>")){
      JOptionPane.showMessageDialog(null, "Selecione uma atividade Valida");
      }else{
            Object[] objetos= {jComboComplementar.getSelectedItem(),jTextInformacoes.getText()};
          complementos.addRow(objetos);
        }
        
}
    }//GEN-LAST:event_ComplementoActionPerformed

    private void datePicker2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_datePicker2ActionPerformed
      //datePicker2.Set<String> hashSet = new HashSet<String>();
      datePicker2.setPreferredSize(datePicker1.getSize());// n permite erro se nenhum for selecionado
      
       // System.out.println(datePicker2.commitEdit());// retorna se a data foi selecionada
       // System.out.println(datePicker2.getDate().getDate() );//aqui temos o formato para converter
       // System.out.println(datePicker2.getDate().getMonth()+1 );
    
        //datePicker2.setDate(datePicker1.getDate());// colocando uma para ser igual a outra
//data aq
    
    }//GEN-LAST:event_datePicker2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
// esse é a quant de linhas this.linhasMostar
 
Aluno alunotabela=Aluno.AlunoBuilder();
if (jComboBox1.getSelectedItem().equals("<Selecione o periodo>")){
    JOptionPane.showMessageDialog(null, "Selecione um periodo");
}else{
if (this.linhasMostar!=0){
    //aluno.novoEvento.visivel();
    //aluno.novoEvento.mostrar.getValueAt(x, 0);
   // aluno.novoEvento.visivel();
    // aqui colocar visibilidade dia mes ano
    if (jComboBox1.getSelectedItem().equals("Semana")){
        for(int x=0; x<aluno.novoEvento.index(); x++){
if (((int)(aluno.novoEvento.mostrar.getValueAt(x, 0)))<=7){
    
    // aqui eu mostro os eventos a menos de 7 dias
    Object[] dados={aluno.novoEvento.mostrar.getValueAt(x, 0),aluno.novoEvento.mostrar.getValueAt(x, 1),aluno.novoEvento.mostrar.getValueAt(x, 2),aluno.novoEvento.mostrar.getValueAt(x, 3)};
    alunotabela.novoEvento.mostrar.addRow(dados);
     alunotabela.novoEvento.visivel();
}
}
    }else if(jComboBox1.getSelectedItem().equals("Mês")){
        
        for(int x=0; x<aluno.novoEvento.index(); x++){
        if (((int)(aluno.novoEvento.mostrar.getValueAt(x, 0)))<=30){
        Object[] dados={aluno.novoEvento.mostrar.getValueAt(x, 0),aluno.novoEvento.mostrar.getValueAt(x, 1),aluno.novoEvento.mostrar.getValueAt(x, 2),aluno.novoEvento.mostrar.getValueAt(x, 3)};
    alunotabela.novoEvento.mostrar.addRow(dados);
     alunotabela.novoEvento.visivel();
        }
        }
     
}else if(jComboBox1.getSelectedItem().equals("Semestre")){
    for(int x=0; x<aluno.novoEvento.index(); x++){
    if (((int)(aluno.novoEvento.mostrar.getValueAt(x, 0)))<=183){
        Object[] dados={aluno.novoEvento.mostrar.getValueAt(x, 0),aluno.novoEvento.mostrar.getValueAt(x, 1),aluno.novoEvento.mostrar.getValueAt(x, 2),aluno.novoEvento.mostrar.getValueAt(x, 3)};
    alunotabela.novoEvento.mostrar.addRow(dados);
     alunotabela.novoEvento.visivel();
        }
    }
}

          
        
}
else{
    JOptionPane.showMessageDialog(null, "Não possui Eventos Cadastrados");
}
}
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jEventoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEventoActionPerformed
        // TODO add your handling code here:
        if(this.validade1==0){
            jEvento.setText("Alternar");
            this.validade1=2;
            jTabbedPane2.setEnabled(true);
            jTabbedPane2.setEnabledAt(1, false);
            disciplinas1.setEnabled(true);
            datePicker2.setEnabled(true);
            jButton5.setEnabled(true);
            jButton8.setEnabled(true);
            jComboBox1.setEnabled(true);
        }else if(this.validade1%2==0){
            jTabbedPane2.setEnabledAt(0, false);
            jTabbedPane2.setSelectedIndex(1);
            jTabbedPane2.setEnabledAt(1, true);
            disciplinas1.setSelectedIndex(0);
            try {
                datePicker2.setDate(datePicker1.getDate());
            } catch (PropertyVetoException ex) {
                Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.validade1++;
        }else{
            jTabbedPane2.setEnabledAt(0, true);
            jTabbedPane2.setSelectedIndex(0);
            jTabbedPane2.setEnabledAt(1, false);
            disciplinas.setSelectedIndex(0);
            try {
                datePicker1.setDate(datePicker2.getDate());
            } catch (PropertyVetoException ex) {
                Logger.getLogger(AgendaInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.validade1++;
        }
    }//GEN-LAST:event_jEventoActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        Aluno alunotabela=Aluno.AlunoBuilder();
if (jComboBox2.getSelectedItem().equals("<Selecione o periodo>")){
    JOptionPane.showMessageDialog(null, "Selecione um periodo");
}else{
if (this.linhasMostar!=0){
    //aluno.novoEvento.visivel();
    //aluno.novoEvento.mostrar.getValueAt(x, 0);
   // aluno.novoEvento.visivel();
    // aqui colocar visibilidade dia mes ano
    if (jComboBox2.getSelectedItem().equals("Semana")){
        for(int x=0; x<aluno.novoEvento.index(); x++){
if (((int)(aluno.novoEvento.mostrar.getValueAt(x, 0)))<=7){
    
    // aqui eu mostro os eventos a menos de 7 dias
    Object[] dados={aluno.novoEvento.mostrar.getValueAt(x, 0),aluno.novoEvento.mostrar.getValueAt(x, 1),aluno.novoEvento.mostrar.getValueAt(x, 2),aluno.novoEvento.mostrar.getValueAt(x, 3)};
    alunotabela.novoEvento.mostrar.addRow(dados);
     alunotabela.novoEvento.visivel();
}
}
    }else if(jComboBox2.getSelectedItem().equals("Mês")){
        
        for(int x=0; x<aluno.novoEvento.index(); x++){
        if (((int)(aluno.novoEvento.mostrar.getValueAt(x, 0)))<=30){
        Object[] dados={aluno.novoEvento.mostrar.getValueAt(x, 0),aluno.novoEvento.mostrar.getValueAt(x, 1),aluno.novoEvento.mostrar.getValueAt(x, 2),aluno.novoEvento.mostrar.getValueAt(x, 3)};
    alunotabela.novoEvento.mostrar.addRow(dados);
     alunotabela.novoEvento.visivel();
        }
        }
     
}else if(jComboBox2.getSelectedItem().equals("Semestre")){
    for(int x=0; x<aluno.novoEvento.index(); x++){
    if (((int)(aluno.novoEvento.mostrar.getValueAt(x, 0)))<=183){
        Object[] dados={aluno.novoEvento.mostrar.getValueAt(x, 0),aluno.novoEvento.mostrar.getValueAt(x, 1),aluno.novoEvento.mostrar.getValueAt(x, 2),aluno.novoEvento.mostrar.getValueAt(x, 3)};
    alunotabela.novoEvento.mostrar.addRow(dados);
     alunotabela.novoEvento.visivel();
        }
    }
}

          
        
}
else{
    JOptionPane.showMessageDialog(null, "Não possui Eventos Cadastrados");
}
}
    }//GEN-LAST:event_jButton7ActionPerformed
 void carrega(){
     Login login = new Login();
     login.log.Cadastro(this.NomeAluno, this.Senha);
       login.setVisible(this.visibilidade);
}
    

    public String getNomeAluno() {
        return NomeAluno;
    }

    public void setNomeAluno(String NomeAluno) {
        this.NomeAluno = NomeAluno;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CadastrarDisciplina;
    private javax.swing.JButton Complemento;
    private com.michaelbaranov.microba.calendar.DatePicker datePicker1;
    private com.michaelbaranov.microba.calendar.DatePicker datePicker2;
    private javax.swing.JComboBox<String> disciplinas;
    private javax.swing.JComboBox<String> disciplinas1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboComplementar;
    private javax.swing.JButton jEvento;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTableComplementares;
    private javax.swing.JTable jTableDisciplina;
    private javax.swing.JTextField jTextDisciplina;
    private javax.swing.JTextField jTextHorario;
    private javax.swing.JTextField jTextInformacoes;
    private javax.swing.JTextField jTextProfessor;
    // End of variables declaration//GEN-END:variables
}

